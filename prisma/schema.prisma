// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int     @id @default(autoincrement())
  userNome     String  @db.VarChar(100)
  userEmail    String  @unique @db.VarChar(100)
  userPassword String  @db.VarChar(200)
  tipoUsuarioId Int
  tipoUser TipoUser @relation(fields: [tipoUsuarioId], references: [tipoId])
  @@map("tblusuarios")
}

model TipoUser{
  tipoId Int @id @default(autoincrement())
  descricaoTipo String  @db.VarChar(100)
  parametro_edit_config Boolean @default(false)
  user User[]
  @@map("tbltipousuarios")
}

model Motorista {
  motoristaId        Int      @id @default(autoincrement())
  motoristaNome      String   @db.VarChar(150)
  numeroBI           String?  @unique @db.VarChar(20)
  motoristaEmail     String?  @unique @db.VarChar(100)
  motoristaTelefone  String   @unique @db.VarChar(20)
  CartaDeConducaoNr  String   @unique @db.VarChar(45) 
  DataValidade       String   @db.VarChar(10)
  viaturaMotorista   ViaturaMotorista[]
  @@map("tblmotoristas")
}

model Viatura {
  viaturaId           Int    @id @default(autoincrement())
  viaturaMarca        String @db.VarChar(100)
  viaturaModelo       String @db.VarChar(30)
  viaturaMatricula    String @unique @db.VarChar(15)
  viaturaAnoFabrica   String @db.VarChar(4) 
  viaturaCombustivel  String @db.VarChar(10)
  viaturaCor          String @db.VarChar(45) 
  viaturaNumeroChassi String @unique @db.VarChar(80) 
  viaturaNumeroLugar  String @db.VarChar(4) 
  viaturaNumeroMotor  String @unique @db.VarChar(80) 
  quilometragem       String @db.VarChar(6)
  planoManutencao     PlanoManutencao[]
  publicidade         Publicidade[]
  historicoManutencao Manutencao[]
  checklistViatura    Checklist[]
  viaturaMotorista    ViaturaMotorista[]
  @@map("tblviaturas")
}

model ViaturaMotorista{
  viaturaId    Int @unique
  viatura      Viatura @relation(fields: [viaturaId], references: [viaturaId])
  motoristaId  Int @unique
  motorista    Motorista @relation(fields: [motoristaId], references: [motoristaId])
}

model PlanoManutencao {
  id             Int      @id @default(autoincrement())
  viaturaId      Int
  dataManutencao String @db.Char(10)
  descricao      String @db.VarChar(250)
  custoPrevisto  Decimal @db.Decimal(18,2)
  status         Boolean
  viatura      Viatura  @relation(fields: [viaturaId], references: [viaturaId])
  @@map("tblplanomanutencao")
}

model Publicidade {
  id            Int      @id @default(autoincrement())
  viaturaId     Int
  dataExpiracao String   @db.Char(10) 
  descricao     String   @db.VarChar(250)
  viatura       Viatura  @relation(fields: [viaturaId], references: [viaturaId])
  @@map("tblpublicidade")
}

model Manutencao {
  id               Int            @id @default(autoincrement())
  viaturaId        Int
  tipoId           Int
  data             DateTime       @default(now())
  quilometragem    Int
  descricao        String         @db.VarChar(250)
  servicos         String         @db.VarChar(200)
  responsavel      String         @db.VarChar(100)
  viatura          Viatura        @relation(fields: [viaturaId], references: [viaturaId])
  tipo             TipoManutencao @relation(fields: [tipoId], references: [id])
   @@map("tblmanutencao")
}

model TipoManutencao {
  id               Int            @id @default(autoincrement())
  nome             String         @unique @db.VarChar(20) // Ex: Preventiva, Corretiva
  manutencoes      Manutencao[]
   @@map("tbltipomanutencao")
}

model Checklist {
  id               Int       @id @default(autoincrement())
  tipo             TipoChecklist  // Enum para diferenciar diário ou semanal
  data             DateTime  @default(now())
  observacoes      String    @db.VarChar(250)
  viaturaId        Int
  viatura          Viatura   @relation(fields: [viaturaId], references: [viaturaId])
   @@map("tblchecklist")
}

// Definindo o tipo de checklist (diário ou semanal)
enum TipoChecklist {
  DIARIO
  SEMANAL
}
