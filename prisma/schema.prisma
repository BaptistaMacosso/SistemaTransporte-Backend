// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int     @id @default(autoincrement())
  userNome     String  @db.VarChar(100)
  userEmail    String  @unique @db.VarChar(100)
  userPassword String  @db.VarChar(200)
  tipoUsuarioId Int
  tipoUser TipoUser @relation(fields: [tipoUsuarioId], references: [tipoId])
  @@map("tblusuarios")
}

model TipoUser{
  tipoId Int @id @default(autoincrement())
  descricaoTipo String  @db.VarChar(100)
  parametro_edit_config Boolean @default(false)
  user User[]
  @@map("tbltipousuarios")
}

model Motorista {
  motoristaId        Int      @id @default(autoincrement())
  motoristaNome      String   @db.VarChar(150)
  numeroBI           String?  @unique @db.VarChar(20)
  motoristaEmail     String?  @unique @db.VarChar(100)
  motoristaTelefone  String   @unique @db.VarChar(20)
  CartaDeConducaoNr  String   @unique @db.VarChar(45) 
  DataValidade       String   @db.VarChar(10)
  viaturaMotorista   ViaturaMotorista[]
  @@map("tblmotoristas")
}

model Viatura {
  viaturaId           Int    @id @default(autoincrement())
  viaturaTipoId       Int
  viaturaCategoriaId  Int
  viaturaMarca        String @db.VarChar(100)
  viaturaModelo       String @db.VarChar(30)
  viaturaMatricula    String @unique @db.VarChar(15)
  viaturaAnoFabrica   String @db.VarChar(4) 
  viaturaCombustivel  String @db.VarChar(10)
  viaturaCor          String @db.VarChar(45) 
  quilometragem       String @db.VarChar(6)
  viaturaTipo         ViaturaTipo @relation(fields: [viaturaTipoId], references: [id])
  viaturaCategoria    ViaturaCategoria @relation(fields: [viaturaCategoriaId], references: [id])
  historicoManutencao Manutencao[]
  checklistViatura    Checklist[]
  viaturaMotorista    ViaturaMotorista[]
  licencaViatura      LicencaTransportacaoViaturas[]
  pedidos             Pedido[]
  @@map("tblviaturas")
}

model ViaturaTipo{
  id          Int @id @default(autoincrement())
  viaturaTipo String @db.VarChar(40) @unique
  viatura     Viatura[]
  @@map("tblviaturaTipo")
}

model ViaturaCategoria{
  id               Int @id @default(autoincrement())
  viaturaCategoria String @db.VarChar(40) @unique
  viatura          Viatura[]
  @@map("tblviaturaCategoria")
}

model ViaturaMotorista{
  viaturaId    Int @unique
  viatura      Viatura @relation(fields: [viaturaId], references: [viaturaId])
  motoristaId  Int @unique
  motorista    Motorista @relation(fields: [motoristaId], references: [motoristaId])
  @@map("tblviaturamotorista")
}

model Manutencao {
  id               Int @id @default(autoincrement())
  viaturaId        Int
  tipoManutencaoId Int
  descricao        String    @db.VarChar(250)
  dataManutencao   DateTime  @default(now())
  quilometragem    Float     @db.DoublePrecision
  responsavel      String    @db.VarChar(100)
  statusManutencaoId Int
  dataCriacao      DateTime  @default(now())
  viatura          Viatura   @relation(fields: [viaturaId], references: [viaturaId])
  tipoManutencao   TipoManutencao   @relation(fields: [tipoManutencaoId], references: [id])
  statusManutencao StatusManutencao @relation(fields: [statusManutencaoId], references: [id])
  @@map("tblmanutencao")
}

model TipoManutencao {
  id             Int     @id @default(autoincrement())
  tipoManutencao String  @db.VarChar(100) @unique
  checkList      Checklist[]
  manutencao     Manutencao[]
  @@map("tbltipomanutencao")
}

model StatusManutencao {
  id               Int     @id @default(autoincrement())
  statusManutencao String  @db.VarChar(100) @unique
  manutencao       Manutencao[]
  @@map("tblstatusmanutencao")
}

model Checklist {
  id               Int       @id @default(autoincrement())
  viaturaId        Int
  tipoManutencaoId Int
  quilometragem    Float     @db.DoublePrecision
  itemsVerificados String    @db.VarChar(100)
  observacao       String    @db.VarChar(250)
  dataCheckList    DateTime  @default(now())
  viatura          Viatura   @relation(fields: [viaturaId], references: [viaturaId])
  tipoManutencao   TipoManutencao @relation(fields: [tipoManutencaoId], references: [id])
   @@map("tblchecklist")
}

model LicencaPublicidadeViaturas{
  id             Int @id @default(autoincrement())
  descricao      String @db.VarChar(100) @unique
  licencaNumero  String @db.VarChar(30) @unique
  dataEmissao    String @db.VarChar(10)
  dataVencimento String @db.VarChar(10)
  licencaStatus  Boolean @default(true)
  @@map("tbllicencapublicidade")
}

model LicencaTransportacaoViaturas{
  id                Int @id @default(autoincrement())
  viaturaId         Int @unique 
  descricao         String @db.VarChar(200) @unique
  observacao        String @db.VarChar(100) 
  viatura           Viatura @relation(fields: [viaturaId], references: [viaturaId]) 
  proprietario      String @db.VarChar(100) 
  dataEmissao       String @db.VarChar(10)
  dataVencimento    String @db.VarChar(10)
  licencaStatus     Boolean @default(true)
  @@map("tbllicencaTransportacao")
}

model Pedido {
  pedidoId         Int @id @default(autoincrement())
  viaturaId        Int
  descricao        String
  dataSolicitacao  DateTime  @default(now())
  tipoServicoId    Int
  statusId         Int
  prestadorId      Int
  prestador        Prestador @relation(fields: [prestadorId], references: [prestadorId])
  viatura          Viatura @relation(fields: [viaturaId], references: [viaturaId])
  tipoServico      TipoServico @relation(fields: [tipoServicoId], references: [id])
  status           Status @relation(fields: [statusId], references: [statusId])
  @@map("tblpedidos")
}

model Prestador {
  prestadorId   Int  @id @default(autoincrement())
  prestadorNome String
  especialidade String @db.VarChar(50)
  contato       String? @db.VarChar(20)
  endereco      String? @db.VarChar(200)
  pedidos     Pedido[]
  @@map("tblprestador")
}

model TipoServico {
  id          Int  @id @default(autoincrement())
  tipoServico String @db.VarChar(30) 
  pedido      Pedido[]
  @@map("tbltiposervico")
}

model Status {
  statusId   Int  @id @default(autoincrement())
  descricao  String @db.VarChar(30)
  pedido     Pedido[]
  @@map("tblstatus")
}
